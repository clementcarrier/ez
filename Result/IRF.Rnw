\documentclass[11pt,oneside, a4paper]{amsart}
\usepackage{natbib}

\usepackage{amsbsy,amsmath}
\usepackage{amssymb,amsfonts}
\usepackage{bbm}%give 1 with dbl vertical bar 
\usepackage{booktabs,url,enumerate}
\usepackage{color,xcolor,colortbl}
\usepackage{float}
\usepackage{tikz}
\usepackage{rotating,graphicx,lscape}
\usepackage{commath}
\usetikzlibrary{arrows,positioning} 
\usepackage[hypcap]{caption}
\newcommand{\sgn}{\mathrm{sign}}
\usepackage{setspace}

% bold rows
\usepackage{array}
\newcolumntype{$}{>{\global\let\currentrowstyle\relax}}
\newcolumntype{^}{>{\currentrowstyle}}
\newcommand{\rowstyle}[1]{\gdef\currentrowstyle{#1}%
  #1\ignorespaces
}

% Invisible table columns!
\newcolumntype{H}{>{\setbox0=\hbox\bgroup}c<{\egroup}@{}}% Properly placed sideways table with asmart class. 

\setlength\rotFPtop{0pt plus 1fil} 


\usepackage[top=1.5cm, bottom=1.5cm, left=3.0cm, right=3.0cm]{geometry}

\DeclareMathOperator{\Med}{\mathbb{M}ed}
\DeclareMathOperator{\Mean}{\mathbb{M}ean}
\DeclareMathOperator{\Cov}{\mathbb{C}ov}
\DeclareMathOperator{\Var}{\mathbb{V}ar}
\DeclareMathOperator{\E}{\mathbb{E}}
\DeclareMathOperator{\nid}{NID}
\DeclareMathOperator{\N}{\mathcal{N}}
\DeclareMathOperator{\corr}{corr}
\DeclareMathOperator{\diag}{diag}
\onehalfspace


\definecolor{LightRed}{rgb}{1,.88,.88}
\definecolor{LightBlue}{rgb}{.88,.88,1}
\definecolor{LightGreen}{rgb}{.88,1,.88}

\newtheorem{theorem}{Theorem}
\begin{document}

  
\title{IRF}   
\author{ClÃ©ment Carrier}
\date{\today}
\maketitle


\section*{Shock response}

Consider a VAR(1) in difference where the parameters have been estimated:
\begin{align}
\Delta Y_t &= \Delta Y_{t-1} \hat A + \epsilon_t,\nonumber
\end{align}

To compute the response to an exogenous shock of size $s$ to the first variable in $Y$, construct the vector $\delta =[s,0,...,0]$. The response at after $h$ periods is given by $\delta \hat A^h$. 
\begin{itemize}
\item For models with multiple lags the companion form (or simply recursive computations) can be used.
\item For models with exogenous variables, at path for the exogenous variables has to be specified. In general it should be equal to zero or to a random walk forecast, at least in periods following an initial shock. 
\item The deterministics can be omitted. 
\item For VECM models, things are more complicated but not much more difficult.    
\end{itemize}


\section*{Conditional forecasts}

The options so far:
\begin{itemize}
\item Create a model for the exogenous variable. 
\item Use na\"{i}ve methods (i.e. RW).
\item Compute prediction density for the exogenous variable and plug in the model. Gaussian + linear = Gaussian.
\item Condition on true value. 
\end{itemize}



\section*{Application sur R}

<<package>>=
require(lassovar)
require(ggplot2)
require(reshape2)
require(urca)
require(MSBVAR)
@

<<Data>>=
load("vardata2")
@

I keep variables from Q1 1998 :
<<>>=
data<-subset(vardataframe[117:180,])
@

First difference of all series : 
<<Differenciating>>=
difdata <- tail(data,-1) - head(data,-1)
@



\section*{Shock Response}

Function for computing the IRF :
<<Function for IRF>>=
forecast<-function(data,lag,horizon,choc){
  fore<-matrix(0,nrow=dim(data)[2],ncol=horizon)
  lv<-lassovar(dat=data,lags=lag, ic="BIC")
  coeff<-lv$coefficients[-1,]
  for (i in 1:horizon){
    fore[,i]<-coeff^i%*%choc
  }
return(t(fore))
}
@



\section*{Conditional Shock}

Function to generate RW for exogonous variables. I fixed the variance of the schock equal to the variance of oil price index on the sample. The reason is that, in the following IRF I only use oil price as exogenous variable. I need to modify the function. 

<<>>=
rw<-function(t,x){
  y<-matrix(0,dim(x)[2],t)
  y[,1]<-t(x)
  for(i in 2:t){
    y[,i] <- y[,i-1] + matrix(rnorm(dim(x)[2],0,0.4942424),dim(x)[2],1)
  }
  return(y)
}
@



Function to compute IRF to RW evolution of exogeneous variables
<<>>=
conditional<-function(exogen,data,lag,horizon){
  all=data.frame(exogen,data)
  fore<-matrix(0,nrow=dim(data)[2]+dim(exogen)[2],ncol=horizon+1)
  fore[,1]<-t(all[dim(all)[1],])
  fore[1:dim(exogen)[2],-1]<-rw(horizon,as.matrix(exogen[dim(exogen)[1],]))
  lv<-lassovar(dat=all,lags=lag, ic="BIC")
  coeff<-as.matrix(t(lv$coefficients[-1,]),26,26)
  intercept<-as.matrix(lv$coefficients[1,],26,1)
  for (i in 2:(horizon+1)){
    fore[-dim(exogen)[2],i]<-intercept[-dim(exogen)[2],]+(coeff%*%fore[,i-1])[-dim(exogen)[2]]
  }
  rownames(fore)<-names(all)
  return(t(fore))
}
@




\section*{Application with Oil Price as exogenous variable}


I transform the HICP index in an inflation rate (year-on-year)

<<>>=
HICP<-vardataframe[113:180,6]

inflation<-NULL
for (i in seq(from=5,to=length(HICP),by=1)){
  inflation[i]=-1+exp(HICP[i])/exp(HICP[i-4])
}

inflation<-inflation[5:68]*100

data$HICP<-NULL
data$inflation<-inflation
@


I choose oil price as exogenous variable.

<<>>=
exo<-data.frame(data$POILU)
colnames(exo)<-'POILU'
end<-subset(data[,-which(names(data) %in% c("POILU"))])
@

I iterate 100 random walk scenario for oil price, and I keep the prediction of inflation. 

<<>>=
iter<-100
HICPpred<-matrix(0,13,iter)
for (i in 1:iter){
  HICPpred[,i]<-matrix(conditional(exo,end,1,12)[,"inflation"])
}
@



<<>>=
HICPpred<-data.frame(HICPpred)
HICPpred$time<-seq(as.Date("2014/10/01"), as.Date("2017/12/31"), by = "quarter")
var <- melt(HICPpred,  id = 'time', variable.name = 'series')
ggplot(var, aes(time,value, col=series)) + geom_point() + stat_smooth()
@




\end{document}